# How a Pod can use environment variables to expose information 
# about itself to Containers running in the Pod. Environment 
# variables can expose Pod fields and Container fields.
apiVersion: v1
kind: Pod
metadata:
  name: dapi-envars-fieldref
spec:
  containers: # NICAE
  - name: test-container
    image: k8s.gcr.io/busybox
    command: ["sh","-c"]
    args:
    - while true; do
          echo -en '\n';
          printenv MY_NODE_NAME MY_POD_NAME MY_POD_NAMESPACE;
          printenv MY_POD_IP MY_POD_SERVICE_ACCOUNT;
          sleep 10;
        done;
    env:
      - name: MY_NODE_NAME
        valueFrom:
          fieldRef:
            fieldPath: spec.nodeName
      - name: MY_POD_NAME 
      # You can get POD_NAME and POD_NAMESPACE passing them as 
      # environment variables via fieldRef
      # You can reference supports metadata.name, metadata.namespace, 
      # metadata.labels, metadata.annotations, spec.nodeName, 
      #spec.serviceAccountName, status.hostIP, status.podIP as 
      # mentioned in the documentation
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      - name: MY_POD_NAMESPACE
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace
      - name: MY_POD_IP
        valueFrom:
          fieldRef:
            fieldPath: status.podIP
      - name: MY_POD_SERVICE_ACCOUNT
        valueFrom:
          fieldRef:
            fieldPath: spec.serviceAccountName
  restartPolicy: Never
