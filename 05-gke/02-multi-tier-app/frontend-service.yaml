apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: guestbook
    tier: frontend
spec:
  # if your cluster supports it, uncomment the following to automatically create
  # an external load-balanced IP for the frontend service.
  type: LoadBalancer # WE MANUALLY UNCOMMENTED THIS
  ports:
  - port: 80
  selector:
    app: guestbook
    tier: frontend

# The redis-slave and redis-master Services you created in the 
# previous steps are only accessible within the container cluster, 
# because the default type for a Service is ClusterIP. 
# ClusterIP provides a single IP address for the set of Pods the 
# Service is pointing to. This IP address is accessible only 
# within the cluster.
#
# However, you need the guestbook web frontend Service to be 
# externally visible. That is, you want a client to be able to 
# request the Service from outside the container cluster. 
# To accomplish this, you need to specify type: LoadBalancer 
# in the Service configuration. 
#
# When the frontend Service is created, GKE creates a load balancer and an external IP address. 
# Note that these resources are subject to billing. 
# The port declaration under the ports section specifies port: 80 
# and the targetPort is not specified. When you omit the 
# targetPort property, it defaults to the value of the port field. 
# In this case, this Service will route external traffic on port 
# 80 to the port 80 of the containers in the frontend Deployment.